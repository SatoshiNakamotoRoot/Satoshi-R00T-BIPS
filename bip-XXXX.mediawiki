<pre>
  BIP: XXXX
  Layer: Applications
  Title: Decentralized Naming Service
  Author: Christopher Gilliard <christopher.gilliard@gmail.com>
  Comments-Summary: No comments yet.
  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX
  Status: Draft
  Type: Standards Track
  Created: 2021-04-21
</pre>

==Abstract==

This BIP describes a layer two protocol for naming using Bitcoin as the underlying cryptocurrency. It is meant to be an alternative to DNS [<a href="#references">1</a>] when mapping from name to onion address is desired. This BIP is dependent on BIP-XXXX and BIP-XXXX.

==Motivation==

DNS is a centralized system in which various third party entities are responsible for allowing users to register domain names that map a name to an IP address. We propose a decentralized protocol to map names to v3 onion addresses [<a href="#references">2</a>]. Reverse lookup will also be possible.

==Specification==

===General===

This BIP relies heavily on BIP-XXXX for notarization and BIP-XXXX for decentralized storage. Each record in the naming system will be considered a document in those systems. To register a name and map it to a v3 onion address, a document is created just like any other document that uses those systems. This document has a particular format and in this BIP we specify that document format. If two notarizations are done in the same block the checksum of the document that comes first will be considered the controlling registration/renaming.

===Format of a name registration document===

    <standard header for documents>
    <1 byte document version>
    <1 byte document type>
    <56 byte onion address>
    <65 byte signature of a specified message (value of the message is TBD)>
    <2 bytes name length>
    <variable bytes for the name>

1.) 1 byte version = 0x01.

2.) 1 byte document type = 0x01 indicating naming registration document.

3.) The 56 byte onion address used in this mapping.

4.) The signature is the signature of a specified message to prove ownership of the private key associated with this onion address.

5.) This is followed by the variable length name of the mapping. The maximum length is 2^16 or 65536.

===Format of a name reassignment document===

    <standard header for documents>
    <1 byte document version>
    <1 byte document type>
    <56 byte onion address new onion address>
    <65 byte signature using the new onion address of a specified message (value of the message is TBD)>
    <65 byte signature using the old onion address of a specified message (value of the message is TBD - it will be different from the other message)>
    <2 bytes name length>
    <variable bytes for the name>

1.) 1 byte version = 0x01.

2.) 1 byte document type = 0x02 indicating naming reassignment document.

3.) The 56 byte onion address used in the mapping. This replaces the existing mapping.

4.) The first signature is the signature of a specified message to prove ownership of the private key associated with the new onion address.

5.) The second signature is the signature of a specified message to prove ownership of the private key associated with the old onion address. This is required for approval purposes.

6.) This is followed by the variable length name of the mapping. The maximum length is 2^16 or 65536.

===Name Servers===

Name servers will download all notarizations that meet the specifications in BIP-XXXX from the blockchain and their associated tree documents from the decentralized storage system described in BIP-XXXX. Each document that is notarized is then checked to see if there are name registrations or name reassignments in them. Syncing of a name server may take some time, so once it is in sync it will continually listen to the blockchain and the other associated systems for updates to keep in sync. Individual users may run their own name server, or more likely most will rely on third parties to run name servers for them. In either case, the centralization of registration is removed because anyone can register a name by submitting a notarization record and anyone can run their own name server without permission as well. Name servers will allow both standard lookup name -> onion address and reverse lookups, onion address -> name.

===Name Sniping===

One issue that may arise is that if a miner, who is responsible for building the notarization tree for a particular block sees that a high value name is being registered, they may choose to register it to themselves in hopes that the one who wants to register the name will pay them to reassign the name. To avoid this, the checksum may be submitted to the notarization service first and only after the checksum is notarized, the full document is published to the decentralized storage system. It's important that the name servers understand that this may be the case and retry documents as they are revealed.

==Summary==

The proposed system will allow names to be registered in a decentralized manner and use the blockchain's ordering to resolve any conflicts with respect to who registered a name first. It will eliminate centralized third parties from the registration process.

==References==

[1] - https://en.wikipedia.org/wiki/Domain_Name_System

[2] - https://en.wikipedia.org/wiki/.onion
